// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// hla_sort
std::vector<std::string> hla_sort(std::vector<std::string> alleles);
RcppExport SEXP _hlatools_hla_sort(SEXP allelesSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type alleles(allelesSEXP);
    rcpp_result_gen = Rcpp::wrap(hla_sort(alleles));
    return rcpp_result_gen;
END_RCPP
}
// hla_prefix
std::vector<std::string> hla_prefix(std::vector<std::string> a);
RcppExport SEXP _hlatools_hla_prefix(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(hla_prefix(a));
    return rcpp_result_gen;
END_RCPP
}
// hla_field1
std::vector<std::string> hla_field1(std::vector<std::string> a);
RcppExport SEXP _hlatools_hla_field1(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(hla_field1(a));
    return rcpp_result_gen;
END_RCPP
}
// hla_field2
std::vector<std::string> hla_field2(std::vector<std::string> a);
RcppExport SEXP _hlatools_hla_field2(SEXP aSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type a(aSEXP);
    rcpp_result_gen = Rcpp::wrap(hla_field2(a));
    return rcpp_result_gen;
END_RCPP
}
// hla_allele_to_genotype
std::vector<std::string> hla_allele_to_genotype(std::vector<std::string> a1, std::vector<std::string> a2);
RcppExport SEXP _hlatools_hla_allele_to_genotype(SEXP a1SEXP, SEXP a2SEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector<std::string> >::type a1(a1SEXP);
    Rcpp::traits::input_parameter< std::vector<std::string> >::type a2(a2SEXP);
    rcpp_result_gen = Rcpp::wrap(hla_allele_to_genotype(a1, a2));
    return rcpp_result_gen;
END_RCPP
}

RcppExport SEXP hlatools_hla_allele_to_genotype(SEXP, SEXP);
RcppExport SEXP hlatools_hla_field1(SEXP);
RcppExport SEXP hlatools_hla_field2(SEXP);
RcppExport SEXP hlatools_hla_prefix(SEXP);
RcppExport SEXP hlatools_hla_sort(SEXP);

static const R_CallMethodDef CallEntries[] = {
    {"_hlatools_hla_sort", (DL_FUNC) &_hlatools_hla_sort, 1},
    {"_hlatools_hla_prefix", (DL_FUNC) &_hlatools_hla_prefix, 1},
    {"_hlatools_hla_field1", (DL_FUNC) &_hlatools_hla_field1, 1},
    {"_hlatools_hla_field2", (DL_FUNC) &_hlatools_hla_field2, 1},
    {"_hlatools_hla_allele_to_genotype", (DL_FUNC) &_hlatools_hla_allele_to_genotype, 2},
    {"hlatools_hla_allele_to_genotype", (DL_FUNC) &hlatools_hla_allele_to_genotype, 2},
    {"hlatools_hla_field1",             (DL_FUNC) &hlatools_hla_field1,             1},
    {"hlatools_hla_field2",             (DL_FUNC) &hlatools_hla_field2,             1},
    {"hlatools_hla_prefix",             (DL_FUNC) &hlatools_hla_prefix,             1},
    {"hlatools_hla_sort",               (DL_FUNC) &hlatools_hla_sort,               1},
    {NULL, NULL, 0}
};

RcppExport void R_init_hlatools(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
